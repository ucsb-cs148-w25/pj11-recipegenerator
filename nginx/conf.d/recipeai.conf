# Define upstream servers for better maintainability
upstream frontend {
    server frontend:80;
}

upstream backend {
    server backend:8000;
}

# Server block for both HTTP and HTTPS (Cloudflare handles SSL termination)
server {
    listen 80;
    server_name recipeai.live www.recipeai.live;
    
    # Path for Let's Encrypt verification
    location /.well-known/acme-challenge/ {
        root /var/www/certbot;
    }
    
    # Trust Cloudflare to handle SSL - important!
    # This identifies if the original request was HTTPS
    set $https_forwarded "";
    if ($http_cf_visitor ~ '{"scheme":"https"}') {
        set $https_forwarded on;
    }
    
    # Route API requests to the backend
    location ~ ^/(fridge|user|recipes|welcome|openapi\.json|redoc) {
        proxy_pass http://backend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        # Pass Cloudflare HTTPS status
        proxy_set_header X-Forwarded-Ssl $https_forwarded;
    }
    
    # Serve static frontend content
    location / {
        proxy_pass http://frontend;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-For $http_cf_connecting_ip;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header X-Forwarded-Host $host;
        proxy_set_header X-Forwarded-Port $server_port;
        # Pass Cloudflare HTTPS status
        proxy_set_header X-Forwarded-Ssl $https_forwarded;
    }
}

# Default server block to handle requests to unknown domains
server {
    listen 80 default_server;
    server_name _;
    
    # Return a simple message for unknown domains
    return 404 "Sorry, this site is not configured.";
} 